version: "3.8"

services:
  prod_backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: Prod_backend
    volumes:
      - ./backend:/app
      - ./backend/sklad/sklad/import_data:/app/sklad/sklad/import_data
    # Убираем direct ports
    depends_on:
      - db

  test_backend:
    build:
      context: ./test_backend
      dockerfile: Dockerfile
    container_name: Test_backend
    volumes:
      - ./test_backend:/app
      - ./test_backend/sklad/sklad/import_data:/app/sklad/sklad/import_data
    # Убираем direct ports
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_DB: sklad_db
      POSTGRES_USER: sklad_user
      POSTGRES_PASSWORD: sklad_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  prod_frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: prod_frontend
    volumes:
      - ./frontend:/var/www/html
    # Убираем direct ports
    depends_on:
      - db

  test_frontend:
    build:
      context: ./test_frontend
      dockerfile: Dockerfile
    container_name: test_frontend
    volumes:
      - ./test_frontend:/var/www/html
    # Убираем direct ports
    depends_on:
      - db

  # Nginx в качестве обратного прокси
  nginx:
    image: nginx:latest
    container_name: reverse_proxy
    ports:
      - "8080:8080"   # Для prod_frontend (public frontend)
      - "8000:8000"   # Для prod_backend (protected backend)
      - "8081:8081"   # Для test_frontend (protected test frontend)
      - "8001:8001"   # Для test_backend (protected test backend)
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd:ro
    depends_on:
      - prod_frontend
      - prod_backend
      - test_frontend
      - test_backend

volumes:
  postgres_data:
